---@class UIView:UIObject
UIView = class("UIView", UIObject)
function UIView:ctor(context, panel)
    self.context = context
    self.panel = panel
    self:SetGameObject(self.panel.gameObject)
    -- self:BindProperty()
end

---获取ViewModel属性的值
---@param fieldName string
---@return any
function UIView:GetContextFieldValue(fieldName)
    return self.context[fieldName]
end

--- 绑定对应ViewModel的字段
---@param field string 字段名字
---@param func function 回调
function UIView:BindContextField(field, func, ...)
    local handle = Handler(func, self, ...)
    self.context:Subscribe(field, handle)
end

---发布一个事件给对应的ViewModel
---@param code any 用于区分的事件编号
---@param ... any 其他参数
function UIView:PublishViewEvent(code, ...)
    self.context:ListenViewEvent(code, ...)
end

------------------------------------以下方法来自UIPanel-------------------------------

function UIView:Show()
    self.panel:Show()
end

function UIView:Hide()
    self.panel:Hide()
end

------------------------------------以下是回调-------------------------------
function UIView:BindProperty() end

function UIView:OnLoad() end

function UIView:OnShow() end

function UIView:OnHide() end

function UIView:OnClose() end
